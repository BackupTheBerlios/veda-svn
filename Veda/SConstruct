#
#    Veda build script
#

import os
from os import environ
from os.path import join


#    system information

osName = os.name
pathCurrent = os.path.abspath(os.curdir)

#    default target paths

pathVedaSimulation = '#VedaSimulation'
pathVedaEditor = '#VedaShell'

#
#    Construct enironments
#

env = Environment()

envPlatform = env['PLATFORM']

if envPlatform == 'win32':
    env.Tool('mingw')
elif envPlatform == 'posix':
    env.Tool('gcc')
else:
    Exit('Unknown OS')
    
#print " :> Original ENV "
#dict = env.Dictionary()
#for key in ['PLATFORM', 'TOOLS']:
#    print "%s => %s" % (key, dict[key])

env.Replace(ENV={'PATH': environ['PATH']})
env.Prepend(CPPPATH=['#src', '#src/Simulation'])    
env.Append(CPPFLAGS=['-fpermissive'])



#
#    Choose target
#


Export('env')

#
#    Build tagets
#

env.SConscript(dirs='#src', exports='env', build_dir='#build', duplicate=0)

#
#    Install
#

env.Install(join(pathVedaSimulation, 'bin'), '#build/Simulation/main.exe')

env.Install(join(pathVedaEditor, 'bin'), '#src/Shell/test_geo.py')
env.Install(join(pathVedaEditor, 'bin'),'geometry.py')
env.Install(join(pathVedaEditor, 'bin'),'#build/Wrap/_geometry.dll')



